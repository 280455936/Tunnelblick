#! /bin/bash
#
# updates_sign_appcast
#
# Copyright Â© 2016 by Jonathan K. Bullard. All rights reserved.
#
#  This file is part of Tunnelblick.
#
#  Tunnelblick is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License version 2
#  as published by the Free Software Foundation.
#
#  Tunnelblick is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program (see the file COPYING included with this
#  distribution); if not, write to the Free Software Foundation, Inc.,
#  59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#  or see http://www.gnu.org/licenses/.

##########################################################################################
#
# Signs or re-signs an appcast or other file by prefixing it with an HTML comment of the form
#
#	<!-- Tunnelblick DSA Signature v1 XXXX -->
#
# where XXXX is the base-64-encoded signature.
#
# for example:
#
#	<!-- Tunnelblick DSA Signature v1 MC0CFH6eat+//9PrM68IEvqkQXQubQ2UAhUApTYbRbf9X7eAPuMn4yxzSMiohnA= -->
#
# Usage:
#
#	updates_sign_appcast    private_key_path    target_path
#
#		"private_key_path" is the path to a "dsa_priv.pem" file (as generated by Sparkle's generate_keys script)
#
#		"target_path" is the path of the file to be signed

##########################################################################################

# Set up

set -e
set -o pipefail

readonly openssl="/usr/bin/openssl"

readonly temp_folder_path=$(mktemp -d "${TMPDIR:-/tmp/}$(basename 0).XXXXXXXXXXXX")

readonly temp_file_path="$temp_folder_path/updates_sign_appcast.tmp.txt"

##########################################################################################

# Do sanity checks

if [ "$#" == "0" -o "$#" == "1" ]; then
	echo "Usage:  $0  private-key-path  target_path..."
	exit 1
fi

# Process arguments

filename=$(basename "$1")
extension=$([[ "$filename" = *.* ]] && echo ".${filename##*.}" || echo '')
if [ "$extension" != ".pem" ] ; then
	echo "Private key file must be a '.pem' file"
	exit 1
fi

if [ ! -f "$1" ] ; then
	echo "No private key file at $1"
	exit 1
fi

readonly private_key_path="$1"

if [ ! -f "$2" ] ; then
	echo "No file to sign at $2"
	exit 1
fi

readonly target_file_path="$2"

##########################################################################################

# Sign the target file

inserted_replaced="Inserted"

# Get the contents of the file after removing the existing signature line if there is one
first_line="$(head -n 1 "$target_file_path")"
first_32_chars="${first_line:0:32}"
if [ "$first_32_chars" == "<!-- Tunnelblick DSA Signature v" ] ; then
	echo "$(tail -n +2 "$target_file_path")" > "$temp_file_path"
	inserted_replaced="Replaced"
else
	cat "$target_file_path" > "$temp_file_path"
fi

# Get the new signature
new_sig="$(	$openssl dgst -sha1 -binary < "$temp_file_path" \
		  | $openssl dgst -dss1 -sign "$private_key_path"     \
		  | $openssl enc  -base64 )"

# Replace the input file: First line is the new signature comment
new_line="<!-- Tunnelblick DSA Signature v1 $new_sig -->"
echo "$new_line" > "$target_file_path"

# Rest of new contents is the old file (without the signature line)
cat "$temp_file_path" >> "$target_file_path"

echo "$inserted_replaced DSA signature in $target_file_path"

# Remove temporary file
rm -f "$temp_file_path"
